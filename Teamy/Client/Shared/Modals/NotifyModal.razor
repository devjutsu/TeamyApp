<style>
    .notification-text {
        margin-bottom: 1rem;
    }

    .confirm-btn {
        margin: .5rem;
    }
</style>

<div class="modal fade show d-block" tabindex="-1" role="dialog">
    <div class="modal-backdrop fade show" @onclick="Cancel"></div>
    <div class="modal-dialog" style="z-index: 1050">
        <!-- Pop it above the backdrop -->
        <div class="modal-content default-modal">
            <div><span class="oi oi-warning" style="font-size: x-large; color:#EE725A;" /></div>
            <div class="default-modal-header"><h4 class="modal-title">@BlazoredModal.Title</h4></div>
            <div @onkeydown="(e => KeyPressed(e))">
                @if (!string.IsNullOrWhiteSpace(Message))
                {
                    <div>@Message</div>
                }

                <div class="d-flex modal-buttons justify-content-center">
                    <button @onclick="Close" class="btn btn-primary confirm-btn">Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public string Message { get; set; }

    async Task Close() => await BlazoredModal.CloseAsync(ModalResult.Ok(true));
    async Task Cancel() => await BlazoredModal.CancelAsync();

    async Task KeyPressed(KeyboardEventArgs e)
    {
        if (e.Key == "Escape")
            await Cancel();
    }
}
